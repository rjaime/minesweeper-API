
Game design:
    -Game parameters:
        -Rows (> 0, max limit?)
        -Columns (> 0, max limit?)
        -Mines (> 0, max limit: c * r - 1)

    -Properties:
        -There's at least 1 mine and at least 1 free cell.
        -Cells can be flagged.
        -Mines distribution is uniform (all cells have the same probability to have a mine).

##############################################################################

API endpoints:
    -/matches/
        GET:
            -Input: -
            -Response:
                -200, {matches: [<id, info(created_at, ..)?]}
                -4xx/5xx, {error: <>}
        POST:
            -Input: rows, columns, mines
            -Response:
                -200, {board: []}
                -4xx/5xx, {error: <>}
    -/matches/<id>/
        GET:
            -Input: -
            -Response:
                -200, {board: [..], <info>}
        DELETE:
            -Input: -
            -Response:
                -204, {}

    -/matches/<id>/reveal
        POST:
            -Input: x, y (integer > 0)
            -Response:
                -200, {target: [x, y], cells: [..]}
                -4xx/5xx, {error: <>}

    -/matches/<id>/flag
        POST:
            -Input: -
            -Response:
                -200, {target: [x, y], cells: [..]}
                -4xx/5xx, {error: <>}
    
##############################################################################

Implementation:
    Models:
        -Match
            -user (fk)
            -created_at (dt)
            -last_action_at (dt)
        
        -Board
            -match (fk)
            -cells (str)
            -rows (int)
            -cols (int)
            -created_at (dt)
            -last_action_at (dt)

        -User
            -username (str)

